---
- name: Install and configure postgres on Centos
  hosts: sonarqubedb

  pre_tasks:
    - name: Create postgres group
      group:
        name: postgres
        state: present

    # - name: Create postgres user
    #   user:
    #     name: postgres
    #     state: present
    #     shell: /bin/bash
    #     group: postgres
    #     append: yes

    - name: Install postgres packages
      yum: 
        name: ['postgresql', 'postgresql-server', 'python3-pip']
        state: present

    - name: Install Python packages
      pip: 
        name: psycopg2
        state: present

  post_tasks:
    - name: Allow postgres service through firewall
      firewalld:
        service: "postgresql"
        permanent: yes
        state: enabled
    - name: reload firewalld service
      systemd:
        name: firewalld
        state: reloaded

   
  tasks:
    - name: Find out if PostgreSQL is initialized
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists
 
    - name: "Start and enable postgres services"
      service: 
        name: postgresql
        state: started 
        enabled: yes

    - name: "Create postgres user"
      postgresql_user:
        state: present
        name: postgres
        password: postgres
        login_password: postgres
      become: yes

    - name: "Create sonar user"
      postgresql_user:
        state: present
        name: sonar
        password: sonar
        login_password: sonar
      become: yes

    - name: "Create sonarqube database"
      postgresql_db:
        state: present
        name: sonar
        owner: sonar
        login_password: postgres
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: sonar
        roles: sonar
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: /var/lib/postgres/data/pg_hba.conf
        contype: host
        databases: all
        method: md5
        users: postgres
        source: 0.0.0.0/0
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

  handlers:
    - name: restart postgres
      service: 
        name: postgresql 
        state: restarted


